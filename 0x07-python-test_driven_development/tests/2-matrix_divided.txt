The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

First import
``matrix_divided`` from the ``2-matrix_divided`` module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:

    >>> matrix = [
    ...    [1, 2, 3],
    ...    [4, 5, 6]
    ... ]

    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> matrix = [
    ...    "Holberton",
    ...    [1, 2, 3],
    ...    [4, 5, 6]
    ... ]

    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [
    ...    [1, 2, 3],
    ...    [4, 5, 6]
    ... ]

    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

    >>> matrix = [
    ...    [1, 2],
    ...    [1, 2, 3],
    ...    [4, 5, 6]
    ... ]

    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

    >>> matrix = [
    ...    [1, 2, 3],
    ...    [4, 5, 6]
    ... ]

    >>> matrix_divided(matrix, "Holberton")
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

    >>> matrix = [
    ...    ["Holberton", 1, 2],
    ...    [1, 2, 3],
    ...    [4, 5, 6]
    ... ]

    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [
    ...    [1, 2, 3],
    ...    [4, 5, 6]
    ... ]

    >>> matrix_divided(matrix, 1)
    [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

    >>> matrix_divided([[1]], 1)
    [[1.0]]

    >>> matrix = [
    ...    [1, 2, 3],
    ...    [4, 5, 6]
    ... ]

    >>> matrix_divided(matrix, 1.3)
    [[0.77, 1.54, 2.31], [3.08, 3.85, 4.62]]
