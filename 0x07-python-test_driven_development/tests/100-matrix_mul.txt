The ``100-matrix_mul`` module
======================

Using ``100-matrix_mul``
-------------------

First import
``matrix_mul`` from the ``100-matrix_mul`` module:

    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Now use it:

    >>> m_a = [[1, 2], [3, 4]]
    >>> m_b = [[1, 2], [3, 4]]
    >>> matrix_mul(m_a, m_b)
    [[7, 10], [15, 22]]


    >>> m_a = [[1, 2], [3, 4], 6]
    >>> m_b = [[1, 2], [3, 4]]
    >>> matrix_mul(m_a, m_b)
    Traceback (most recent call last):
        ...
    TypeError: m_a must be a list of lists

    >>> m_a = [[1, 2], [3, 4]]
    >>> m_b = [[1, 2], [3, 4]]
    >>> matrix_mul(2, m_b)
    Traceback (most recent call last):
        ...
    TypeError: m_a must be a list


    >>> m_a = [[1, "Holberton"], [3, 4]]
    >>> m_b = [[1, 2], [3, 4]]
    >>> matrix_mul(m_a, m_b)
    Traceback (most recent call last):
        ...
    TypeError: m_a should contain only integers or floats

    >>> m_a = [[1, 2], [3, 4], [3, 4, 5]]
    >>> m_b = [[1, 2], [3, 4]]
    >>> matrix_mul(m_a, m_b)
    Traceback (most recent call last):
        ...
    TypeError: each row of m_a must be of the same size

    >>> m_a = [[1, 2], [3, 4]]
    >>> m_b = [[1, 2], [3, 4], [3, 4, 5]]
    >>> matrix_mul(m_a, m_b)
    Traceback (most recent call last):
        ...
    TypeError: each row of m_b must be of the same size

    >>> m_a = [[1, 2], [3, 4]]
    >>> m_b = [[1, 2], [3, 4], [5, 6]]
    >>> matrix_mul(m_a, m_b)
    Traceback (most recent call last):
        ...
    ValueError: m_a and m_b can't be multiplied

    >>> m_a = [[1, 2], [3, 4]]
    >>> m_b = [[]]
    >>> matrix_mul(m_a, m_b)
    Traceback (most recent call last):
    ...
    ValueError: m_b can't be empty

    >>> m_a = [[]]
    >>> m_b = [[1, 2], [3, 4]]
    >>> matrix_mul(m_a, m_b)
    Traceback (most recent call last):
        ...
    ValueError: m_a can't be empty
